# data input
energy_types <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/energy_types.csv')
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/energy_types.csv')
View(country_totals)
View(energy_types)
View(country_totals)
View(energy_types)
country_totals <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
View(country_totals)
library(tidyverse)
country_totals <- as_factor(country_totals, levels = "type")
country_totals <- as_factor(country_totals$type)
country_totals <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_totals$type <- as_factor(country_totals$type)
country_totals$type <- as_factor(country_totals$type, ordered = TRUE)
# data input
country_totals <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_totals$type <- as_factor(country_totals$type)
View(country_totals)
rm(country_totals$level)
country_totals <- select(country_totals, -level)
# data input
country_totals <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_totals$type <- as_factor(country_totals$type)
country_totals <- select(country_totals, -level)
# data input
country_totals <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_totals$type <- as_factor(country_totals$type) # convert to factor
country_totals <- select(country_totals, -level) # remove 'level' column
# data input
country_totals <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-08-04/country_totals.csv')
country_totals %>% select(-level)
country_totals %>% select(-level) %>% as_factor(~type)
country_totals %>% select(-level) %>% as_factor(type)
f <- country_totals %>% as_factor(type) # convert to factor
country_totals$type <- country_totals %>% as_factor(type) # convert to factor
country_totals %>% mutate(type == as.factor(type))
country_totals %>% mutate(type == as.factor())
country_totals$type <- as_factor(country_totals$type) # convert to factor
country_totals <- country_totals %>% select(-level) # remove 'level' column
install.packages("rtweet")
rt <- search_tweets("#handmadehour", n = 18000, include_rts = FALSE)
library(rtweet)
rt <- search_tweets("#handmadehour", n = 18000, include_rts = FALSE)
rt <- search_tweets("#handmadehour", n = 1800, include_rts = FALSE)
rt %>%
ts_plot("3 hours") +
theme_minimal() +
theme(plot.title = ggplot2::element_text(face = "bold")) +
labs(
x = NULL, y = NULL,
title = "Frequency of #handmadehour tweets from past 9 days",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet")
rt %>%
ts_plot("6 hours") +
theme_minimal() +
theme(plot.title = ggplot2::element_text(face = "bold")) +
labs(
x = NULL, y = NULL,
title = "Frequency of #handmadehour tweets from past 9 days",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet")
rt %>%
ts_plot("24 hours") +
theme_minimal() +
theme(plot.title = ggplot2::element_text(face = "bold")) +
labs(
x = NULL, y = NULL,
title = "Frequency of #handmadehour tweets from past 9 days",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet")
rt %>%
ts_plot("1 hour") +
theme_minimal() +
theme(plot.title = ggplot2::element_text(face = "bold")) +
labs(
x = NULL, y = NULL,
title = "Frequency of #handmadehour tweets from past 9 days",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet")
rt <- search_tweets("#handmadehour", n = 5000, include_rts = FALSE)
View(rt)
rt %>%
ts_plot("1 hour") +
theme_minimal() +
theme(plot.title = ggplot2::element_text(face = "bold")) +
labs(
x = "Date", y = "# of Tweets",
title = "Frequency of #handmadehour tweets from past 9 days",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet")
rt <- search_tweets("#SmallBusiness", n = 5000, include_rts = FALSE)
rt %>%
ts_plot("1 hour") +
theme_minimal() +
theme(plot.title = ggplot2::element_text(face = "bold")) +
labs(
x = "Date", y = "# of Tweets",
title = "Frequency of #handmadehour tweets from past 9 days",
subtitle = "Twitter status (tweet) counts aggregated using one-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet")
rt
rt <- search_tweets("#handmadehour", n = 5000, include_rts = FALSE)
rt <- search_tweets("#handmadehour", n = 5000, include_rts = FALSE)
rt <- search_tweets("#handmadehour", n = 5000, include_rts = FALSE, retryonratelimit = TRUE)
View(rt)
